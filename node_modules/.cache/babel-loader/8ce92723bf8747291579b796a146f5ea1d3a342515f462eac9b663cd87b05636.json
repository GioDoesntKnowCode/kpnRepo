{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nexport const fetchCustomers = createAsyncThunk('customers/fetchCustomers', async () => {\n  // Here, we're just using some mock data for simplicity.\n  const response = await Promise.resolve([{\n    id: 1,\n    name: 'John Doe',\n    address: '123 Main St',\n    phoneNumber: '555-555-5555'\n  }, {\n    id: 2,\n    name: 'Jane Doe',\n    address: '456 Broadway St',\n    phoneNumber: '555-555-5556'\n  }\n  // more customers...\n  ]);\n\n  return response;\n});\nconst customerSlice = createSlice({\n  name: 'customers',\n  initialState: {\n    entities: [],\n    loading: 'idle'\n  },\n  reducers: {\n    // You can define other actions such as editCustomer here.\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchCustomers.fulfilled, (state, action) => {\n      state.entities = action.payload;\n    });\n  }\n});\nexport default customerSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchCustomers","response","Promise","resolve","id","name","address","phoneNumber","customerSlice","initialState","entities","loading","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","reducer"],"sources":["/Users/giovannifernando/Desktop/kpn2/customer-management/src/redux/customerSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nexport const fetchCustomers = createAsyncThunk('customers/fetchCustomers', async () => {\n  // Here, we're just using some mock data for simplicity.\n  const response = await Promise.resolve([\n    { id: 1, name: 'John Doe', address: '123 Main St', phoneNumber: '555-555-5555' },\n    { id: 2, name: 'Jane Doe', address: '456 Broadway St', phoneNumber: '555-555-5556' },\n    // more customers...\n  ]);\n  return response;\n});\n\nconst customerSlice = createSlice({\n  name: 'customers',\n  initialState: { entities: [], loading: 'idle' },\n  reducers: {\n    // You can define other actions such as editCustomer here.\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchCustomers.fulfilled, (state, action) => {\n      state.entities = action.payload;\n    });\n  },\n});\n\nexport default customerSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAEhE,OAAO,MAAMC,cAAc,GAAGD,gBAAgB,CAAC,0BAA0B,EAAE,YAAY;EACrF;EACA,MAAME,QAAQ,GAAG,MAAMC,OAAO,CAACC,OAAO,CAAC,CACrC;IAAEC,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,UAAU;IAAEC,OAAO,EAAE,aAAa;IAAEC,WAAW,EAAE;EAAe,CAAC,EAChF;IAAEH,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,UAAU;IAAEC,OAAO,EAAE,iBAAiB;IAAEC,WAAW,EAAE;EAAe;EACnF;EAAA,CACD,CAAC;;EACF,OAAON,QAAQ;AACjB,CAAC,CAAC;AAEF,MAAMO,aAAa,GAAGV,WAAW,CAAC;EAChCO,IAAI,EAAE,WAAW;EACjBI,YAAY,EAAE;IAAEC,QAAQ,EAAE,EAAE;IAAEC,OAAO,EAAE;EAAO,CAAC;EAC/CC,QAAQ,EAAE;IACR;EAAA,CACD;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACf,cAAc,CAACgB,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC3DD,KAAK,CAACP,QAAQ,GAAGQ,MAAM,CAACC,OAAO;IACjC,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,eAAeX,aAAa,CAACY,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}