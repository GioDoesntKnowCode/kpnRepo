{"ast":null,"code":"var _jsxFileName = \"/Users/giovannifernando/Desktop/kpn2/customer-management/src/components/Customer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Modal from './Modal';\nimport './Customer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomerList = () => {\n  _s();\n  const [selectedCustomer, setSelectedCustomer] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  const fs = require('fs');\n  const csv = require('csv-parser');\n  const customers = [];\n  fs.createReadStream('../assets/sample_customers.csv').pipe(csv()).on('data', row => {\n    const customer = {\n      id: parseInt(row['Index']),\n      name: row['Name'],\n      address: '',\n      phoneNumber: ''\n    };\n    customers.push(customer);\n  }).on('end', () => {\n    console.log(customers);\n  });\n  const handleSearch = event => {\n    setSearchTerm(event.target.value);\n  };\n  const filteredCustomers = customers.filter(customer => customer.phoneNumber.includes(searchTerm));\n  const handleViewDetails = customer => {\n    setSelectedCustomer(customer);\n    setIsModalOpen(true);\n  };\n  const handleModalClose = () => {\n    setIsModalOpen(false);\n  };\n  const handleSaveCustomer = updatedCustomer => {\n    // Find the index of the updated customer in the customers array\n    const index = customers.findIndex(customer => customer.id === updatedCustomer.id);\n    if (index !== -1) {\n      // Create a new customers array with the updated customer\n      const updatedCustomers = [...customers.slice(0, index), updatedCustomer, ...customers.slice(index + 1)];\n\n      // Update the customers array in the state\n      setSelectedCustomer(updatedCustomer);\n      // You may also update the customers state if necessary\n      // setCustomers(updatedCustomers);\n    }\n\n    setIsModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Customer List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search by phone number\",\n      value: searchTerm,\n      onChange: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"customer-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Phone Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: filteredCustomers.map(customer => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: customer.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: customer.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: customer.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: customer.phoneNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleViewDetails(customer),\n              children: \"View/Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)]\n        }, customer.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), isModalOpen && selectedCustomer && /*#__PURE__*/_jsxDEV(Modal, {\n      onClose: handleModalClose,\n      customer: selectedCustomer,\n      onSave: handleSaveCustomer,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Customer Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"ID: \", selectedCustomer.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", selectedCustomer.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Address: \", selectedCustomer.address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Phone Number: \", selectedCustomer.phoneNumber]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomerList, \"4BiuECRJhz2U++6hpkPCT7b5l6o=\");\n_c = CustomerList;\nexport default CustomerList;\nvar _c;\n$RefreshReg$(_c, \"CustomerList\");","map":{"version":3,"names":["React","useState","Modal","jsxDEV","_jsxDEV","CustomerList","_s","selectedCustomer","setSelectedCustomer","isModalOpen","setIsModalOpen","searchTerm","setSearchTerm","fs","require","csv","customers","createReadStream","pipe","on","row","customer","id","parseInt","name","address","phoneNumber","push","console","log","handleSearch","event","target","value","filteredCustomers","filter","includes","handleViewDetails","handleModalClose","handleSaveCustomer","updatedCustomer","index","findIndex","updatedCustomers","slice","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","className","map","onClick","onClose","onSave","_c","$RefreshReg$"],"sources":["/Users/giovannifernando/Desktop/kpn2/customer-management/src/components/Customer.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Modal from './Modal';\nimport './Customer.css';\n\nconst CustomerList = () => {\n  const [selectedCustomer, setSelectedCustomer] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const fs = require('fs');\nconst csv = require('csv-parser');\n\nconst customers = [];\n\nfs.createReadStream('../assets/sample_customers.csv')\n  .pipe(csv())\n  .on('data', (row) => {\n    const customer = {\n      id: parseInt(row['Index']),\n      name: row['Name'],\n      address: '',\n      phoneNumber: '',\n    };\n\n    customers.push(customer);\n  })\n  .on('end', () => {\n    console.log(customers);\n  });\n\n\n\n  const handleSearch = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  const filteredCustomers = customers.filter(customer =>\n    customer.phoneNumber.includes(searchTerm)\n  );\n\n  const handleViewDetails = (customer) => {\n    setSelectedCustomer(customer);\n    setIsModalOpen(true);\n  };\n\n  const handleModalClose = () => {\n    setIsModalOpen(false);\n  };\n\n  \n  const handleSaveCustomer = (updatedCustomer) => {\n    // Find the index of the updated customer in the customers array\n    const index = customers.findIndex((customer) => customer.id === updatedCustomer.id);\n\n    if (index !== -1) {\n      // Create a new customers array with the updated customer\n      const updatedCustomers = [\n        ...customers.slice(0, index),\n        updatedCustomer,\n        ...customers.slice(index + 1)\n      ];\n\n      // Update the customers array in the state\n      setSelectedCustomer(updatedCustomer);\n      // You may also update the customers state if necessary\n      // setCustomers(updatedCustomers);\n    }\n\n    setIsModalOpen(false);\n  };\n\n  return (\n    <div>\n      <h2>Customer List</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Search by phone number\"\n        value={searchTerm}\n        onChange={handleSearch}\n      />\n      <table className=\"customer-table\">\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Name</th>\n            <th>Address</th>\n            <th>Phone Number</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n           {filteredCustomers.map(customer => (\n            <tr key={customer.id}>\n              <td>{customer.id}</td>\n              <td>{customer.name}</td>\n              <td>{customer.address}</td>\n              <td>{customer.phoneNumber}</td>\n              <td>\n                <button onClick={() => handleViewDetails(customer)}>View/Edit</button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      {isModalOpen && selectedCustomer && (\n        <Modal onClose={handleModalClose} customer={selectedCustomer} onSave={handleSaveCustomer}>\n          <h3>Customer Details</h3>\n          <p>ID: {selectedCustomer.id}</p>\n          <p>Name: {selectedCustomer.name}</p>\n          <p>Address: {selectedCustomer.address}</p>\n          <p>Phone Number: {selectedCustomer.phoneNumber}</p>\n          {/* Add editable fields and update logic here */}\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default CustomerList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}